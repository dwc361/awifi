<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/jdbc 
     http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
	<!-- 使用注解声明式事务 -->
	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="10000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="dbType" value="mysql" />
		<property name="config">
			<bean class="com.alibaba.druid.wall.WallConfig">
			</bean>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="filters" value="stat,log4j" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<!-- <ref bean="wall-filter" /> -->
			</list>
		</property>
		<property name="driverClassName" value="${jdbcDriver}" />
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${jdbcUser}" />
		<property name="password" value="${jdbcPassword}" />
		<property name="maxActive" value="${connectionPoolMaxSize}" />
		<property name="initialSize" value="${connectionPoolInitialSize}" />
		<property name="minIdle" value="${connectionPoolMinIdle}" />
		<property name="maxWait" value="${connectionPoolMaxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT '1' from s_dictionary" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
	</bean>
	<!-- hibernate 事务管理 -->
	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 数据源事物管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- hibernate sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!-- <property name="configLocation" value="classpath:hibernate.cfg.xml" 
			/> -->
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<array>
				<value>org.roof</value>
				<value>com.zjhcsoft</value>
			</array>
		</property>
		<property name="hibernateProperties">
			<!-- hibernate.hbm2ddl.auto validate update -->
			<value>
				hibernate.connection.autocommit=false
				hibernate.connection.pool_size=20
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=false
				hibernate.cache.use_second_level_cache=true
				hibernate.cache.use_query_cache=false
				hibernate.cache.region_prefix=hibernate.test
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
				javax.persistence.validation.mode=none
			</value>
		</property>
	</bean>
	<!-- hibernate 模板 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- jdbc 模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- ibatis 配置 -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<value>classpath*:/**/*_exp.xml</value>
		</property>
		<property name="configLocations">
			<value>classpath:sql-map-config.xml</value>
		</property>
	</bean>
	<bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>
</beans>